{"ast":null,"code":"var _jsxFileName = \"/home/lisa/Lambda-School/lisa/empathy_app/React-Github-User-Card/user-card/src/components/UserCard.js\";\nimport React, { Component } from \"react\";\nimport Loader from \"./Loader\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nconst useStyles = makeStyles({\n  card: {\n    maxWidth: 345\n  },\n  media: {\n    height: 140\n  }\n});\nexport default class UserCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: props.username,\n      name: \"\",\n      avatar_url: \"\",\n      company: \"\",\n      location: \"\",\n      public_repos: \"0\",\n      followers: \"0\",\n      gists: \"0\",\n      error: null,\n      isLoading: true\n    };\n  }\n\n  componentWillMount() {\n    const url = \"https://api.github.com/users/lisaMTayl\";\n    fetch(url).then(results => {\n      if (results.ok) return results.json();else throw new Error(\"User not found!\");\n    }).then(data => {\n      this.setState({\n        name: data.name,\n        avatar_url: data.avatar_url,\n        company: data.company,\n        location: data.location,\n        public_repos: data.public_repos,\n        gists: data.public_gists,\n        followers: data.followers,\n        isLoading: false\n      });\n    }).catch(error => {\n      this.setState({\n        error,\n        isLoading: false\n      }, () => console.log(\"callb\", error));\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          error = _this$state.error,\n          isLoading = _this$state.isLoading;\n\n    if (error) {\n      return React.createElement(\"p\", {\n        style: {\n          fontSize: \"8vh\",\n          fontWeight: \"300\",\n          margin: \"25vh auto\",\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, error.message);\n    }\n\n    if (isLoading) return React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    });\n    return React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.avatar_url,\n      alt: this.state.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.state.name), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"https://github.com/lisaMTayl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"@lisaMTayl\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.state.location), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"REPOS\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"GISTS\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"FOLLOWERS\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, this.state.public_repos), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, this.state.gists), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, this.state.followers))))));\n  }\n\n}","map":{"version":3,"sources":["/home/lisa/Lambda-School/lisa/empathy_app/React-Github-User-Card/user-card/src/components/UserCard.js"],"names":["React","Component","Loader","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","Avatar","useStyles","card","maxWidth","media","height","UserCard","constructor","props","state","username","name","avatar_url","company","location","public_repos","followers","gists","error","isLoading","componentWillMount","url","fetch","then","results","ok","json","Error","data","setState","public_gists","catch","console","log","render","fontSize","fontWeight","margin","color","message"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Loader from \"./Loader\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles({\n  card: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n});\nexport default class UserCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: props.username,\n      name: \"\",\n      avatar_url: \"\",\n      company: \"\",\n      location: \"\",\n      public_repos: \"0\",\n      followers: \"0\",\n      gists: \"0\",\n      error: null,\n      isLoading: true\n    };\n  }\n\n  componentWillMount() {\n    const url = \"https://api.github.com/users/lisaMTayl\";\n    fetch(url)\n      .then(results => {\n        if (results.ok) return results.json();\n        else throw new Error(\"User not found!\");\n      })\n      .then(data => {\n        this.setState({\n          name: data.name,\n          avatar_url: data.avatar_url,\n          company: data.company,\n          location: data.location,\n          public_repos: data.public_repos,\n          gists: data.public_gists,\n          followers: data.followers,\n          isLoading: false\n        });\n      })\n      .catch(error => {\n        this.setState({ error, isLoading: false }, () =>\n          console.log(\"callb\", error)\n        );\n      });\n  }\n\n  render() {\n    const { error, isLoading } = this.state;\n\n    if (error) {\n      return (\n        <p\n          style={{\n            fontSize: \"8vh\",\n            fontWeight: \"300\",\n            margin: \"25vh auto\",\n            color: \"red\"\n          }}\n        >\n          {error.message}\n        </p>\n      );\n    }\n    if (isLoading) return <Loader />;\n\n    return (\n      <Card>\n        <div className=\"card-header\">\n          <img src={this.state.avatar_url} alt={this.state.name} />\n        </div>\n        <div className=\"card-body\">\n          <h3>{this.state.name}</h3>\n          <h4>\n            <a href={`https://github.com/lisaMTayl`}>\n              @lisaMTayl</a>\n          </h4><p>{this.state.location}</p>\n\n          <div>\n            <thead>\n            <tr>\n              <th>REPOS</th>\n              <th>GISTS</th>\n              <th>FOLLOWERS</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n              <td>{this.state.public_repos}</td>\n              <td>{this.state.gists}</td>\n              <td>{this.state.followers}</td>\n            </tr>\n            </tbody>\n          </div>\n        </div>\n      </Card>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}